#!/bin/bash
#
# Convert animation file to a MP4 video file and/or a modern and much smaller WebM video.
#
# - Optimize a specific video:
#
# `optimize-video {{file.mov}}`
#
# ---
# Author: Nick Plekhanov, https://nikkhan.com/
# License: MIT
# https://github.com/nicksp/dotfiles

set -euo pipefail

if [ "$#" -eq 0 ] || [ -z "$1" ] || [ "$1" = "-h" ]; then
  echo "$(basename $0) converts given file (.mov, .gif, etc.) to .mp4 using ffmpeg."
  echo -e "The output will be stored in the same directory of input file.\n"
  echo "Usage: $(basename $0) <input_file>"
  echo "Example: $(basename $0) my-screencast.mov"
  exit 1
fi

input_file=$1
output_file="$1.mp4"
output_webm_file="$1.webm"

# Verify dependencies
command -v ffmpeg &> /dev/null || { MISSING_DEPS="$MISSING_DEPS ffmpeg"; }
if [ ! -z "$MISSING_DEPS" ]; then
  echo "[ERROR] missing dependencies:"
  echo $MISSING_DEPS
  exit
fi

echo "[INFO] making mp4..."
echo "output file: $output_file"

# Adapted from https://web.dev/articles/replace-gifs-with-videos
time ffmpeg \
  -hwaccel auto \
  -i "$input_file" \
  -movflags faststart \
  -pix_fmt yuv420p \
  -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" \
  -hide_banner -loglevel error \
  "$output_file"

# Consider converting GIF animation to a modern and much smaller WebM video
# time ffmpeg -i "$input_file" -c vp9 -b:v 0 -crf 41 "$output_webm_file"
